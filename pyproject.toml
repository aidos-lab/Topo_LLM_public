[tool.ruff]
# extend = "$HOME/.config/ruff.toml"
target-version = "py310"
# Set the maximum line length.
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
# extend-select = ["E501"]
ignore = ["ANN101", "ANN102", "RET504", "D102"]

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.poetry]
name = "topollm"
version = "0.1.0"
description = "Investigating embedding spaces generated by language models from a topological perspective"
authors = ["Benjamin Matthias Ruppik <ruppik@hhu.de>"]
license = "Apache 2.0"
readme = "README.md"

[tool.poetry.dependencies]
    accelerate = "^0.28.0"
    datasets = "*"
    hydra-core = "*"
    gitpython = "*"
    gudhi = "*"
    pandas = "*"
    pydantic = "*"
    python = "3.10.*"
    scikit-learn = "^1.4.1.post1"
    scikit-dimension = "^0.3.4"
    StrEnum = {version = "^0.4", markers = "python_version < '3.11'"}
    torch = "2.0.*"
    tqdm = "*"
    transformers = "*"
    zarr = "*"
    tensorboard = "^2.16.2"
    seaborn = "^0.13.2"
    giotto-tda = "^0.6.0"
    umap-learn = "^0.5.5"
    peft = "^0.10.0"
    python-dotenv = "^1.0.1"
    graphriccicurvature = "^0.5.3.1"
    networkx = "^3.2.1"
    pyyaml = "^6.0.1"
    hydra-colorlog = "^1.2.0"
    wandb = "^0.17.0"
    rich = "^13.7.1"

[tool.poetry.group.dev.dependencies]
    hypothesis = "^6.99.13"
    pytest = "^8.0.1"
    pytest-cov = "*"
    ipykernel = "^6.29.5"

[tool.poetry.group.cpu]
    optional = true

[tool.poetry.group.cpu.dependencies]
    faiss-cpu = "*"

[tool.poetry.group.gpu]
    optional = true

[tool.poetry.group.gpu.dependencies]
    faiss-gpu = "*"
    gpustat = "^1.1.1"

# This section is for using the PyPI mirror on hilbert (HHU internal)
#
# [[tool.poetry.source]]
#     name = "hhu"
#     url = "http://pypi.repo.test.hhu.de/simple/"
#     priority = "default"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
