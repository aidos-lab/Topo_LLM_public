[project]
name = "topollm"
version = "0.3.0"
description = "Investigating embedding spaces generated by language models from a topological perspective"
authors = [
    { name = "AUTHOR_1", email = "author1@example.com" },
    { name = "AUTHOR_2", email = "author2@example.com" },
]
requires-python = "~=3.12.0"
readme = "README.md"
dependencies = [
    "accelerate",
    "datasets",
    "hydra-core",
    "gitpython",
    "gudhi<=3.10",            # `gudhi` (v3.11.0) is not available on the HPC cluster
    "pandas",
    "pydantic",
    "scikit-learn",
    "scikit-dimension",
    "torch>=2.3,<2.4",        # this restriction is needed to avoid issues with the HPC cluster
    "tqdm",
    "transformers>=4,<4.48",
    "zarr>=2,<3",
    "tensorboard",
    "seaborn",
    "giotto-tda>=0.6.2,<0.7",
    "umap-learn",
    "peft",
    "python-dotenv",
    "graphriccicurvature",
    "pyyaml",
    "hydra-colorlog",
    "wandb>=0.16.0,<0.17",
    "rich",
    "evaluate",
    "seqeval",
    "nltk>=3.8.1,<4",
    "annotated-types",
    "pydantic-core",
    "click",
    "platformdirs",
    "hydra-zen",
    "hydra-joblib-launcher",
    "pypdf",
    "reportlab",
    "markupsafe",
    "wat",
    "numba",
    "networkit<=11",
    "tensorboardx>=2.6.2.2",
    "boto3>=1.37.20",
    "kaleido==0.2.1",         # There is an error on MacOS with ARM chip when installing one of the post versions of kaleido
    "pyzmq<27",
]
# Comments on pinned versions.
#
# - Problem with kaleido on MacOS with ARM chip:
#   error: Distribution `kaleido==0.2.1.post1 @ registry+https://pypi.org/simple` can't be installed because it doesn't have a source distribution or wheel for the current platform
#   hint: You're on macOS (`macosx_15_0_arm64`), but `kaleido` (v0.2.1.post1) only has wheels for the following platform: `manylinux2014_armv7l`
#   Current solution: Pinning the version to 0.2.1 
#   https://github.com/astral-sh/uv/issues/12032

[project.scripts]
tests = "topollm.scripts.run_tests_with_coverage:main"
finetune_language_model = "topollm.model_finetuning.run_finetune_language_model_on_huggingface_dataset:main"
compute_embeddings = "topollm.compute_embeddings.run_compute_embeddings:main"
compute_perplexity = "topollm.model_inference.perplexity.run_compute_perplexity:main"
pipeline_inference = "topollm.model_inference.run_inference_pipeline:main"
pipeline_local_estimates = "topollm.pipeline_scripts.run_pipeline_compute_embeddings_and_data_prep_and_local_estimate:main"
submit_jobs = "topollm.scripts.submission_scripts.orchestrate_job_submission:main"
submit_jobs_via_tmux = "topollm.scripts.submission_scripts.call_submit_jobs_scripts.call_submit_jobs_for_experiments_via_tmux_submission:submit_jobs_in_separate_tmux_sessions"
sync_gc_data = "topollm.scripts.google_cloud.gsutil_rsync_directory_to_and_from_gc_bucket:main"
all_perplexity_analysis_steps = "topollm.model_inference.perplexity.saved_perplexity_processing.run_all_perplexity_analysis_steps.py:main"
compare_sampling_methods = "topollm.analysis.compare_sampling_methods.run_general_comparisons:main"


[dependency-groups]
dev = ["hypothesis", "pytest", "pytest-cov", "ipykernel"]
cpu = []
gpu = ["gpustat"]


[tool.uv]
default-groups = ["dev", "cpu", "gpu"]

# Note: 
# The following section is needed on the HPC cluster to use the PyPI mirror,
# since we do not have internet access on the cluster.
# This should be removed when using the package outside of the cluster,
# and before the package is released.
#
# [[tool.uv.index]]
# name = "[ANONYMIZED_tool.uv.index_NAME]"
# url = "[ANONYMIZED_PYPI_REPO]"
# default = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
# extend = "$HOME/.config/ruff.toml"
target-version = "py312"
# Set the maximum line length.
line-length = 120

select = ["ALL"]
# Add the `line-too-long` rule to the enforced rule set. By default, Ruff omits rules that
# overlap with the use of a formatter, like Black, but we can override this behavior by
# explicitly adding the rule.
# extend-select = ["E501"]
ignore = ["RET504", "D102"]

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyright]
include = ["topollm", "tests"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "data",
    "hydra_output_dir",
    "wandb_output_dir",
]
ignore = ["src/oldstuff"]
defineConstant = { DEBUG = true }

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING"]
